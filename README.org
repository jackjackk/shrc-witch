#+PROPERTY: header-args:sh :tangle .shrc-witch
* TOC                                                                   :TOC:
 - [[#installation][Installation]]
 - [[#werr-report-shortened-error-files-for-given-resdirs][werr (report shortened error files for given resdirs)]]
 - [[#wdump-dump-symbol-from-temp-gdx-under-given-resdirs][wdump (dump symbol from temp gdx under given resdirs)]]
 - [[#wtemp-save-all-data-temp-from-two-consecutive-nash-iterations][wtemp (save all data temp from two consecutive Nash iterations)]]
 - [[#wclean-remove-225-lstouterr][wclean (remove 225*, */*{lst,out,err})]]
 - [[#wcleandir-cleancreate-procdir-and-resdir-w-common-name][wcleandir (clean/create procdir and resdir w/ common name)]]
 - [[#useful-aliases][Useful aliases]]
   - [[#bw-show-running-jobs][bw (show running jobs)]]
   - [[#bwg-show-running-jobs-grepped][bwg (show running jobs grepped)]]
   - [[#bag-show-finished-jobs-grepped][bag (show finished jobs grepped)]]
   - [[#bal-show-recently-finished-jobs][bal (show recently finished jobs)]]
   - [[#bl-show-job-details-by-id][bl (show job details by id)]]
   - [[#blj-show-job-details-by-name][blj (show job details by name)]]
   - [[#bf-peek-into-job-by-id][bf (peek into job by id)]]
   - [[#bfj-peek-into-job-by-name][bfj (peek into job by name)]]
   - [[#bq-show-gamsserial-queues][bq (show gams/serial queues)]]
   - [[#bk-kill-job-by-id][bk (kill job by id)]]
   - [[#bkj-kill-job-by-name][bkj (kill job by name)]]
   - [[#lsl-show-most-recently-modified-files][lsl (show most recently modified files)]]
   - [[#lsld-show-most-recently-modified-directories][lsld (show most recently modified directories)]]

* Installation
#+BEGIN_SRC sh :tangle no
cd
git clone https://github.com/jackjackk/shrc-witch.git
echo "source ~/shrc-witch/.shrc-witch" >>.bashrc
. ~/.bashrc
#+END_SRC

* werr (report shortened error files for given resdirs)
#+BEGIN_EXAMPLE
werr RESDIR1 [RESDIR2 ...]
#+END_EXAMPLE
#+BEGIN_SRC sh
werr ()
{
while [ "$1" != "" ]; do
    for f in ${1}/err*; do
        echo -e "\n\e[33m${f}:\e[97m"
        head -n4 $f
        egrep -i '^>>>>' $f
        tail -n5 $f
    done
    shift
done
}
#+END_SRC

* wdump (dump symbol from temp gdx under given resdirs)
#+BEGIN_EXAMPLE
wdump SYMBOL RESDIR1 [RESDIR2 ...]
#+END_EXAMPLE
#+BEGIN_SRC sh
wdump ()
{
WHAT=$1
shift
while [ "$1" != "" ]; do
    for f in ${1}/all_data_temp*; do
        echo -e "\n\e[33m${f}:\e[97m" 1>&2 
        gdxdump $f symb=${WHAT}
    done
    shift
done
}
#+END_SRC

* wtemp (save all data temp from two consecutive Nash iterations)
#+BEGIN_EXAMPLE
wtemp RESDIR [MATCH]
#+END_EXAMPLE
Files are saved as temp_XXX_a.gdx and temp_XXX_b.gdx.
#+BEGIN_SRC sh
wtemp ()
{
workdir="$1"
match="$2"
for f in ${workdir}/all_data_temp_${match}*; do
fbase=$(basename ${f}); fnameext=${fbase:14}; fname=temp_${fnameext%.gdx}
until rsync ${f} ${fname}_a.gdx; do sleep 1; done
ahash=$(md5sum ${fname}_a.gdx | cut -d' ' -f1)
echo "${f} -> ${fname}_a.gdx (${ahash})"
tail -n1 ${workdir}/errors_${match}*;bhash=$ahash
while [ "$ahash" == "$bhash" ]; do sleep 4;bhash=$(md5sum ${f} | cut -d' ' -f1); done
until rsync ${f} ${fname}_b.gdx; do sleep 1; done
echo "${f} -> ${fname}_b.gdx (${bhash})"; tail -n1 ${workdir}/errors_${match}*;done
}
#+END_SRC

* wclean (remove 225*, */*{lst,out,err})
#+BEGIN_SRC sh
wclean ()
{
rm -rv 225*
rm -v */*{lst,out,err}
}
#+END_SRC
* wcleandir (clean/create procdir and resdir w/ common name)
#+BEGIN_EXAMPLE
wcleandir RESDIR
#+END_EXAMPLE
Clean/create ~225_$RESDIR~ and ~$RESDIR~ directories.
#+BEGIN_SRC sh
wcleandir ()
{
SCENDIR=$1
PROCDIR=225_${SCENDIR}
if [ -d ${PROCDIR} ]; then
rm -rf ${PROCDIR}/*
else
mkdir -p ${PROCDIR}
fi
if [ -d ${SCENDIR} ]; then
rm ${SCENDIR}/{*lst,job*{out,err}}
else
mkdir -p ${SCENDIR}
fi
}
#+END_SRC

* Useful aliases

** bw (show running jobs)
#+BEGIN_SRC sh
alias bw='bjobs -w'
#+END_SRC

** bwg (show running jobs grepped)
#+BEGIN_SRC sh
alias bwg='bjobs -w | egrep -i'
#+END_SRC

** bag (show finished jobs grepped)
#+BEGIN_SRC sh
alias bag='bjobs -aw | grep -i'
#+END_SRC

** bal (show recently finished jobs)
#+BEGIN_SRC sh
alias bal='bjobs -aw | tail'
#+END_SRC

** bl (show job details by id)
If no job id is given, show last submitted running job.
#+BEGIN_SRC sh
alias bl='bjobs -l'
#+END_SRC

** blj (show job details by name)
#+BEGIN_SRC sh
alias blj='bjobs -l -J'
#+END_SRC

** bf (peek into job by id)
If no job id is given, show last submitted running job.
#+BEGIN_SRC sh
alias bf='bpeek -f'
#+END_SRC

** bfj (peek into job by name)
#+BEGIN_SRC sh
alias bfj='bpeek -f -J'
#+END_SRC

** bq (show gams/serial queues)
#+BEGIN_SRC sh
alias bq='bqueues | egrep "(QUEUE_NAME|serial|gams)"'
#+END_SRC

** bk (kill job by id)
Provide 0 to kill all jobs.
#+BEGIN_SRC sh
alias bk='bkill'
#+END_SRC

** bkj (kill job by name)
#+BEGIN_SRC sh
alias bkj='bkill -J'
#+END_SRC

** lsl (show most recently modified files)
#+BEGIN_SRC sh
alias lsl='ls -lct | head -n20'
#+END_SRC

** lsld (show most recently modified directories)
225* directories are omitted.
#+BEGIN_SRC sh
alias lsld='ls -lcth | egrep "^d" | grep -v " 225_" | head -n20'
#+END_SRC
