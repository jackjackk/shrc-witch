
werr ()
{
while [ "$1" != "" ]; do
    for f in ${1}/err*; do
        echo -e "\n\e[33m${f}:\e[0m"
        head -n5 $f
        egrep -i '^> [a-z]' $f | tail -n1
        tail --lines=+6 $f | tail -n5
    done
    shift
done
}

wdump ()
{
WHAT=$1
shift
while [ "$1" != "" ]; do
    for f in ${1}/all_data_temp*gdx; do
        echo -e "\n\e[33m${f}:\e[0m" 1>&2 
        gdxdump $f symb=${WHAT}
    done
    shift
done
}

wtemp ()
{
workdir="$1"
ngdx="$2"
match="$3"
for f in ${workdir}/all_data_temp_${match}*; do
fbase=$(basename ${f}); fnameext=${fbase:14}; fname=temp_${fnameext%.gdx}
until rsync ${f} ${fname}_1.gdx; do sleep 1; done
ahash=$(md5sum ${fname}_1.gdx | cut -d' ' -f1)
echo "${f} -> ${fname}_1.gdx (${ahash})"
tail -n1 ${workdir}/errors_${match}*
bhash=$ahash
for i in $(seq 2 $ngdx); do
while [ "$ahash" == "$bhash" ]; do sleep 4;bhash=$(md5sum ${f} | cut -d' ' -f1); done
until rsync ${f} ${fname}_${i}.gdx; do sleep 1; done
echo "${f} -> ${fname}_${i}.gdx (${bhash})"; tail -n1 ${workdir}/errors_${match}*
ahash="${bhash}"
done
done
}

wclean ()
{
rm -rv 225*
rm -v */*{lst,out,err}
}

wcleandir ()
{
SCENDIR=$1
PROCDIR=225_${SCENDIR}
if [ -d ${PROCDIR} ]; then
rm -rf ${PROCDIR}/*
else
mkdir -p ${PROCDIR}
fi
if [ -d ${SCENDIR} ]; then
rm ${SCENDIR}/{*lst,job*{out,err}}
else
mkdir -p ${SCENDIR}
fi
}

wrun_general ()
{
QUEUE=$1
shift
RUN=$1
wcleandir ${RUN}
NPROC=$2
mkdir -p ${RUN} 225_${RUN}
EXTRA_ARGS=""
PREV_CONV="$(gdxdump ${RUN}/results_${RUN}.gdx symb=stop_nash format=csv | tail -n1 | sed 's/[[:space:]]//g')"
if [[ $PREV_CONV =~ ^1$ ]]; then
[[ ! ${@:3} =~ startgdx ]] && EXTRA_ARGS="$EXTRA_ARGS --startgdx=${RUN}/results_${RUN} --calibgdx=${RUN}/results_${RUN} --tfpgdx=${RUN}/results_${RUN}"
[[ ! ${@:3} =~ startgdx ]] && [[ ! ${@:3} =~ gdxfix ]] && EXTRA_ARGS="$EXTRA_ARGS --startboost=1"
[[ ! ${@:3} =~ baugdx ]] && [[ ${RUN} =~ bau ]] && EXTRA_ARGS="$EXTRA_ARGS --baugdx=${RUN}/results_${RUN}"
fi
[ -z "$EXTRA_ARGS" ] || echo "AUTO EXTRA ARGS: $EXTRA_ARGS"
bsub -n${NPROC} -J "$RUN" -R "span[hosts=1]" -q ${QUEUE} -o ${RUN}/job_${RUN}.out -e ${RUN}/job_${RUN}.err gams call_default.gms gdxcompress=1 Output="${RUN}/${RUN}.lst" Procdir=225_${RUN} --nameout="${RUN}" --resdir=$RUN/ --gdxout=results_${RUN} --gdxout_report=report_${RUN} --gdxout_start=start_${RUN} --verbose=1 --parallel=incore ${EXTRA_ARGS} ${@:3}
}

wrun ()
{
wrun_general serial_24h ${@}
}

wrun6 ()
{
wrun_general serial_6h ${@}
}

wbrun ()
{
wrun $1 $2 --startgdx=$3 --baugdx=$3 --calibgdx=$3 --tfpgdx=$3 --startboost=1 ${@:4}
}      

wcrun ()
{
wbrun $1 $2 $3 --calibration=1 ${@:4}
}      

wfrun ()
{
wbrun $1 $2 $3 --gdxfix=$3 ${@:4}
}      

wfind ()
{
grep -i $1 *.gms */*.gms
}

gdiff ()
{
    type dwdiff &>nul 2>&1;
    if [ $? -eq 0 ]; then
        CMD=dwdiff;
    else
        if [ ! -f dwdiff ]; then
            echo 'WARN: dwdiff tool not found... downloading'
            curl http://os.ghalkes.nl/dist/dwdiff-2.1.0.tar.bz2 > dwdiff-2.1.0.tar.bz2
            tar xjf dwdiff-2.1.0.tar.bz2 
            cd dwdiff-2.1.0
            ./configure
            make all
            mv dwdiff ../
            cd ..
            rm -rf dwdiff-2.1.0.tar.bz2 dwdiff-2.1.0
            CMD=./dwdiff;
        fi
    fi;
    SYMB=$1;
    MATCHES=$2
    DMPLIST=(one two);
    IGDX=0;
    AWKPARAM="/\"$(sed 's|,|[a-z]*"/ \&\& /"|g' <<<"${MATCHES}")[a-z]*\"/"
    for GDX in ${@:3};
    do
        echo $GDX;
        DMP=${GDX%.gdx}zzz.txt;
        rm -fv "$DMP"
        gdxdump $GDX symb=$SYMB format=csv | awk "$AWKPARAM" | sed 's/","/ /g;s/"//g;s/,/ /;' > "$DMP"
        DMPLIST[IGDX]=$DMP;
        let IGDX=IGDX+1;
    done;
    $CMD -c -L -d' ,.' ${DMPLIST[@]}
}

alias bw='bjobs -w'

alias bwg='bjobs -w | egrep -i'

alias bag='bjobs -aw | grep -i'

alias bal='bjobs -aw | tail'

alias bl='bjobs -l'

alias blj='bjobs -l -J'

alias bf='bpeek -f'

alias bfj='bpeek -f -J'

alias bq='bqueues | egrep "(QUEUE_NAME|serial|gams)"'

alias bk='bkill'

alias bkj='bkill -J'

alias lsl='ls -lcth | head -n20'

alias lsld='ls -lcth | egrep "^d" | grep -v " 225_" | head -n20'
